10-14-2023

heatMetab.py is a small program that automates metabolomics data pathway visualization. It takes processed metabolomics data and a curated metabolite pathway map (or the default) along with user-defined parameters and displays the metabolites in that map by color-coded change magnitude and fill-coded significance.

############################################################################
INSTALLATION

1. python version 3: can be downloaded from www.python.org/downloads

2. modules matplotlib and python-pptx, which can be installed by opening a command terminal and running:
	python -m pip install matplotlib
	python -m pip install python-pptx
	
############################################################################
CURATED METABOLITE MAP SETUP

While I could just grab KEGG's metabolite plots, they are too full and not ideal for data exploration and pattern finding. Each user has their own interest and focus and will be better served by generating a template map for display. There is a default simple map of common polar metabolite pathways originally generated by Ji Seul Han that comes with this program.

To make your map, create 1 Powerpoint slide (e.g., LPSMap10-14-23.pptx) that contains these elements:
-Metabolites: Placed as Text Boxes where you would like them to appear containing the metabolite name. Note that these names need to match exactly (including capitalization case) those in the input data file and name conversion file. For LPSmap10-14-23.pptx, the nicknames from Ji Seul's map should all be edited to match those from the PCDL polar metabolite library with the prefix and underscore stripped. If questions, consult with Jamie.
-Connections: Placed as Lines connecting one metabolite to another. I haven't built in code yet to handle Lines that connect to other Lines (such as to represent metabolites that feed into or are byproducts of a synthetic process), so don't do that -- just connect the Metabolites directly. You can edit the final diagram later, or let Jamie know if you really want this feature. If you are interested in arrows to show directionality, also let Jamie know.

Avoid plotting Loner metabolites that aren't connected to anything else (the program will identify these from the input data file and put them on a separate slide). Don't put anything else on the slide.

Do not put any newlines after a metabolite (use Ctrl+A or Select All to see all the textboxes to check).

Run to generate the map coordinates file for use below:
python -m hotCoordinatesEdges --infile="pathAndInfileName.pptx" --outfile="yourOutfileName.txt"

############################################################################
INPUT FILE SETUP

It's easiest to put all of the following four files in the same folder as heatMetab.py, but you can put them elsewhere and specify the full path.

1. input data file (e.g., inputfile.txt)
This is a tab-delimited file without a header row that contains the following columns. One easy way to make FDR q-values is to copy the p-values column and enter into R this command (helpful to copy it in first before copying the column):
	writeClipboard(as.character(p.adjust(as.numeric(read.table(file="clipboard")[,1]),method="BH")))
Then you can just paste the q-value column back into Excel.
Column 1: metabolite names, which must match those in the map coordinates file and name conversion file exactly (including capitalization case)
Column 2: log-transformed fold-change values
Column 3: q-values

2. name conversion file (e.g., fullToDisplay.txt)
This is a tab-delimited file without a header row that contains the following columns.
Column 1: metabolite full name, which must match those in the input data file and map coordinates file exactly (including capitalization case)
Column 2: the nickname you want displayed

3. map coordinates file (e.g., hardcodedCoordinates.txt)
This is a tab-delimited file without a header row that contains the following columns and should be generated with hotCoordinatesEdges.py as above. Note that a single metabolite can have multiple node entries if it is displayed in different locations on the digram. If you don't want a metabolite displayed on the diagram, don't list it here.
Column 1: node index number, starting at 0 and increasing by 1 for each row (basically a 0-based row number)
Column 2: metabolite full name, which must match those in the input data file and name conversion file exactly
Column 3: x-coordinate (horizontal position from the left) of this node's textbox center
Column 4: y-coordinate (vertical position from the top) of  this node's textbox center
Column 5: number of connections (edges) to other nodes
Column 6: comma-delimited (no whitespace) list of the node index numbers of other nodes connected to this one; each connection should only be represented once in this file (it will be in one node's list but not the other node's list)

4. json file (e.g., paramfile.json)
The default contents are pasted below:
{
"undetectedColor": "whitesmoke", 
"FDRthreshold": 0.25, 
"valuesToColors": {"-2.0": "cornflowerblue", "0.0": "white", "2.0": "tomato"},
"namefile": "C:\\Users\\jamie\\Dropbox (Personal)\\hotMetab\\fullToDisplay.txt",
"coordfile": "C:\\Users\\jamie\\Dropbox (Personal)\\hotMetab\\hardcodedCoordinates.txt"
}
Edit any of the righthand side values, which should be self-explanatory. For valuesToColors, you can additional cutpoints and colors.
You can find a list of matplotlib-recognized color names here: matplotlib.org/stable/gallery/color/named_colors.html

############################################################################
RUNNING THE PROGRAM

Open a command terminal and change to the directory containing heatMetab.py. Then run:
python -m heatMetab -p "pathAndJsonFileName.json" -i "pathAndInfileName.txt"

You will see a Powerpoint file as an output, along with 3 colorbar files (PDF, PNG, and SVG) for you to use and edit.
